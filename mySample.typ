#import "myTemplate.typ": *
#import "@preview/codelst:2.0.0": sourcecode


#show: project.with(
  anonymous: false,
  title: "电影赏析",
  author: "张钧玮",
  school: "计算机学院",
  id: "U202115520",
  mentor: "陶然",
  class: "大数据2102班",
  date: (2024, 5, 20)
)


= 引言

周处除三害是今年春节后在大陆上映的一部台湾电影，本人也是吃到安利在还没有被剧透完以前就第一时间就去电影院鉴赏了这部作品。很多人津津乐道这部影片的那些血腥暴力充满张力的镜头，但是我在观影时候就一直感觉主人公陈桂林不是简单的打打杀杀的黑道角色。这部作品的确是一部很好的结合了商业与深度思想内核的好作品，本文将对这部电影的思想内核进行赏析。本人以为，对主角陈桂林之动机行为之分析，能够深刻揭示人在存活时候的真正行为逻辑以及背后的哲学意味。

#pagebreak()
= 故事概要

首先解释电影引用的典故，即“周处除三害”。周处除三害出自《晋书·周处传》和《世说新语》。

周处（242-297）年少时身材魁梧，体力过人，武艺高强。好驰骋田猎，不修细行，纵情肆欲，横行乡里。民谣说：“小周处，体力强，日弄刀弓夜弄枪。拳打李，脚踢张，好像猛虎扑群羊。吓得乡民齐叫苦，无人敢与论短长。”这位“少孤，不修细行，州里患之”的七尺少年，被乡民与南山猛虎、西氿蛟龙合称为阳羡城“三害”。后来，这个说法传到了周处那里，他自知为人所厌，突然悔悟，只身入山射虎，下水搏蛟，经三日三夜，在水中追逐数十里，终于斩杀猛虎、孽蛟。他自己也改邪归正，认认真真拜师学文练武，这一来城内“三害”皆除。

在电影中，即是化用了周处除三害的典故。陈桂林是台湾省排名第三的通缉犯，在得知自己身患癌症时日不多以后，决定效仿周处，除掉排名第一第二的通缉犯，然后投案自首。他先后杀死了香港仔和尊者，然后投案自首。直到投案以后才知道自己并非绝症之躯，最后被死刑处决。
#pagebreak()
= 分析

== 陈桂林：一个追寻意义的人

豆瓣高赞已说，陈桂林是个痴人，我因此觉得，陈桂林是个虚无之人。他始终在寻找一个目的，但是他的行为却因此并没有什么意义，即不是为了高尚的品德，也不是为了低劣的利益，不是为了救母亲的钱（常见的影视套路），也不是为了在黑帮里面做大做强，更加不是为了什么所谓的正义（什么蝙蝠侠）。这些实际对他只是浮云，但是他却作为杀手去杀了人，也因此被通缉，成为台湾省第三的通缉犯。他的人生缺少了意义，意即缺少了差别，尤其是他与抢了鸡蛋的市井之人一块自首的时候，被告知要一起在警察局里，而电影的主线正是去寻找意义，哪怕杀人。当面对死亡，意义的叩问愈发的沉重，一个解构了一切的人，不得不去建构些什么以对抗虚无，这便是这个故事的内核。


== 动机探讨：为什么要猎杀榜一榜二

「真正严肃的哲学问题只有一个，那便是自杀。判断人生值不值得活，等于是回答哲学的根本问题」。确诊肺癌面对死亡时，人生值不值得活这个究极问题变得格外的熠熠生辉。陈桂林因此给出了自己的答案，他要成为传奇然后去死。「我不是怕死啊，我是怕死了都没人记得。」，成为传奇因此成为了他的救赎。这是一个很荒谬主义的命题，杀人，以此来获取意义。生活的残酷因此成为了一种惨淡的幽默。

== 礼堂之上：建构却意味着欺骗

陈桂林的澎湖之旅是许多博主津津乐道的片段，宗教，欺骗，揭露，复活，屠杀。陈桂林一直在苦苦的追寻意义，一个人的建构之路困难，容易自我怀疑，直到他遇上了尊者，尊者跟他一起在宗教当中获得了心灵的充实以及满足。但是当他第一次认为自己找到了答案，结果却是被欺骗。

「我感谢天地，我感谢父母，我是罪人，我危害人间，我愿抛开一切，消除名利权利，舍弃金钱物质，归于真我。」当杀人如麻的陈桂林泪流满面的时候，他应该是真正觉得自己找到了意义以及问题的答案。可惜建构却是通往谎言之路，假如因为自己思考而感到痛苦，于是让别人代替自己去思考，结果却是虚假的平静，这实在令人感到残酷以及荒谬。当意义变成了谎言，似乎个体的清醒和智慧是一种和意义相互敌对的关系。

因此陈桂林需要重新上路。简单的救赎即是虚假的救赎，真正的意义只有亲身面见死亡才能够找到。礼堂的屠杀，即是对尊者死后礼堂信徒的处决和救赎，人如果想要继续寻找真正的意义，就必须从这种被欺骗的虚假的意义脱身出来。然后孤独的探寻及不免令人想到反复搬运巨石上山的西西弗斯，人生便是在这种反复的毫无意义的荒谬里进行。
== 影片之外，我们该何去何从

电影的最后，陈桂林被处决。这似乎正是象征了意义的虚无，这令我想到了加缪的《局外人》。然而当陈桂林最后被处决却流出眼泪感到满足，他为了什么感到满足？因为他一直所追寻的意义即将实现，自己也已经满足了最后的希望，即成为传奇。赋予了自己的人生意义以后，哪怕清楚的意识到自己的人生实际上毫无意义，但依旧感觉值得一过，这便是答案。「Il faut imaginer Sisyphe heureux.」，与命运和解的唯一途径就是在认识虚无以后，仍然热爱生活。坦然接受自己行为的荒谬性和无意义以后，哪怕巨石反复推上山顶再回到山底，哪怕人终有一死，死后意义消散殆尽，荒谬的世界依旧值得被赋予热情，当生活拥有了自定义的意义以后，便是幸福的了。


// == typst 介绍


// #img(
//   image("assets/avatar.jpeg", height: 20%),
//   caption: "我的 image 实例 0",
// )

// == 基本语法

// === 代码执行

// 正文可以像前面那样直接写出来，隔行相当于分段。

// 个人理解：typst 有两种环境，代码和内容，在代码的环境中会按代码去执行，在内容环境中会解析成普通的文本，代码环境用{}表示，内容环境用[]表示，在 content 中以 \# 开头来接上一段代码，比如\#set rule，而在花括号包裹的块中调用代码就不需要 \#。


// === 标题

// 类似 Markdown 里用 \# 表示标题，typst 里用 = 表示标题，一级标题用一个 =，二级标题用两个 =，以此类推。


// 间距、字体等会自动排版。

// \#pagebreak() 函数相当于分页符，在华科的要求里，第一级标题应当分页，请手动分页。


// = 本模板相关封装



// 图用下面的方式来引用，img 是对 image 的包装，caption 是图片的标题。

// #img(
//   image("assets/avatar.jpeg", height: 20%),
//   caption: "我的 image 实例 1",
// ) <img1>

// 引用 2-1: @img1

// == 表格

// 表格跟图片差不多，但是表格的输入要复杂一点，建议在 typst 官网学习，自由度特别高，定制化很强。

// 看看@tbl1，tbl 也是接收两个参数，一个是 table 本身，一个是标题，table 里的参数，没有字段的一律是单元格里的内容（每一个被[]）包起来的内容，在 align 为水平时横向排列，排完换行。

// #tbl(
//   table(
//     columns: (100pt, 100pt, 100pt),
//     inset: 10pt,
//     stroke: 0.7pt,
//     align: horizon,
//     [], [*Area*], [*Parameters*],
//     image("assets/avatar.jpeg", height: 10%),
//     $ pi h (D^2 - d^2) / 4 $,
//     [
//       $h$: height \
//       $D$: outer radius \
//       $d$: inner radius
//     ],
//     image("assets/avatar.jpeg", height: 10%),
//     $ sqrt(2) / 12 a^3 $,
//     [$a$: 边长]
//   ),
//   caption: "芝士样表"
// ) <tbl1>



// #tbl(
//   three_line_table(
//     (
//     ("Country List", "Country List", "Country List"),
//     ("Country Name or Area Name", "ISO ALPHA Code", "ISO ALPHA"),
//     ("Afghanistan", "AF", "AFT"),
//     ("Aland Islands", "AX", "ALA"),
//     ("Albania", "AL", "ALB"),
//     ("Algeria", "DZ", "DZA"),
//     ("American Samoa", "AS", "ASM"),
//     ("Andorra", "AD", "AND"),
//     ("Angola", "AP", "AGO"),
//   )),
//   caption: "三线表示例"
// )

// #tbl(
//   three_line_table(
//     (
//     ("Country List", "Country List", "Country List", "Country List"),
//     ("Country Name or Area Name", "ISO ALPHA 2 Code", "ISO ALPHA 3", "8"),
//     ("Afghanistan", "AF", "AFT", "7"),
//     ("Aland Islands", "AX", "ALA", "6"),
//     ("Albania", "AL", "ALB", "5"),
//     ("Algeria", "DZ", "DZA", "4"),
//     ("American Samoa", "AS", "ASM", "3"),
//     ("Andorra", "AD", "AND", "2"),
//     ("Angola", "AP", "AGO", "1"),
//   )),
//   caption: "三线表示例2"
// )


// == 公式

// 公式用两个\$包裹，但是语法跟 LaTeX 并不一样，如果有大量公式需求建议看官网教程 https://typst.app/docs/reference/math/equation/。

// 为了给公式编号，也依然需要封装，使用 equation 里包公式的方式实现，比如：

// #equation(
//   $ A = pi r^2 $,
// ) <eq1>

// 根据@eq1 ，推断出@eq2

// #equation(
//   $ x < y => x gt.eq.not y $,
// ) <eq2>

// 然后也有多行的如@eq3，标签名字可以自定义

// #equation(
//   $ sum_(k=0)^n k
//     &< 1 + ... + n \
//     &= (n(n+1)) / 2 $,
// ) <eq3>


// 如果不想编号就直接用\$即可


// $ x < y => x gt.eq.not y $

// == 列表

// - 无序列表1: 1

// - 无序列表2: 2

// #indent()列表后的正文，应当有缩进。这里加入一个 \#indent() 函数来手动生成段落缩进，是因为在目前的 typst 设计里，按英文排版的习惯，连续段落里的第一段不会缩进，也包括各种列表。

// 1. 有序列表1
// 2. 有序列表2

// 列表后的正文，应当有缩进，但是这里没有，请自己在段首加上\#indent()

// 想自己定义可以自己set numbering，建议用 \#[] 包起来保证只在该作用域内生效：

// #[
// #set enum(numbering: "1.a)")
// + 自定义列表1
//   + 自定义列表1.1
// + 自定义列表2
//   + 自定义列表2.1
// ]

// == 代码块

// //代码块使用的是库codelst，语法和markdown类似
// #sourcecode[```typ
// #show "ArtosFlow": name => box[
//   #box(image(
//     "logo.svg",
//     height: 0.7em,
//   ))
//   #name
// ]

// This report is embedded in the
// ArtosFlow project. ArtosFlow is a
// project of the Artos Institute.
// ```]

// #pagebreak()
// = 其他说明

// == 文献引用

// 引用支持 LaTeX Bib 的格式，也支持更简单好看的 yml 来配置（尚未流行，推荐优先使用`.bib`）在引用时使用`#bib_cite(<tag>)`，像这样#bib_cite(<impagliazzo2001problems>,<Burckhardt:2013>)以获得右上的引用标注#bib_cite(<刘星2014恶意代码的函数调用图相似性分析>)#bib_cite(<papadimitriou1998combinatorial>)。

// 记得在最后加入\#references("path/to/ref.bib")函数的调用来生成参考文献。

// 由于华科使用自创引用格式，基本上为 GB/T 7714 去掉[J]、[C]、[M] 刊物类型。Typst 已支持 `csl` 自定义参考文献列表，基于#link("https://github.com/redleafnew/Chinese-STD-GB-T-7714-related-csl/blob/main/462huazhong-university-of-science-and-technology-school-of-cyber-science-and-engineering.csl")[#underline()[这个]]修改，如果想再自定义新的格式，请修改 `template.typ` 中 `bibliography` 函数中 style 参数。


// == 致谢部分

// 致谢部分在最后加入\#acknowledgement()函数的调用来生成。


// == 模板相关

// 这个模板应该还不是完全版，可能不能覆盖到华科论文的所有case要求，如果遇到特殊 case 请提交 issue 说明，或者也可以直接提 pull request

// 同时，由于 typst 太新了，2023年4月初刚发布0.1.0版本，可能会有大的break change发生，模板会做相应修改。

// 主要排版数据参考来自 https://github.com/zfengg/HUSTtex 同时有一定肉眼排版成分，所以有可能不完全符合华科排版要求，如果遇到不对的间距、字体等请提交 issue 说明。

// === 数据相关

// 所有拉丁字母均为 Times New Roman，大小与汉字相同

// 正文为宋体12pt，即小四

// 图表标题为黑体12pt

// 表格单元格内容宋体10.5pt，即五号

// 一级标题黑体18pt加粗，即小二

// 二级标题14pt加粗，即四号

// 正文行间距1.24em（肉眼测量，1.5em与与word的1.5倍行距并不一样）

// a4纸，上下空2.5cm，左右空3cm





// #pagebreak()
// #acknowledgement()[
  
// 完成本篇论文之际，我要向许多人表达我的感激之情。

// 首先，我要感谢我的指导教师，他/她对本文提供的宝贵建议和指导。所有这些支持和指导都是无私的，而且让我受益匪浅。

// 其次，我还要感谢我的家人和朋友们，他们一直以来都是我的支持和鼓励者。他们从未停止鼓舞我，勉励我继续前行，感谢你们一直在我身边，给我幸福和力量。

// 此外，我还要感谢我的同学们，大家一起度过了很长时间的学习时光，互相支持和鼓励，共同进步。因为有你们的支持，我才能不断地成长、进步。

// 最后，我想感谢笔者各位，你们的阅读和评价对我非常重要，这也让我意识到了自己写作方面的不足，同时更加明白了自己的研究方向。谢谢大家！

// 再次向所有支持和鼓励我的人表达我的谢意和感激之情。

// 本致谢生成自 ChatGPT。
// ]

// #pagebreak()

// #references("./ref.bib")
